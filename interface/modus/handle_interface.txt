'use strict';

class HandleInterface {
    // 初始化，并设置 init
    // 执行一段js代码，返回结果 
    // 根据一个选择器，触发其上面的功能（默认为点击）
    // 载入一个JS文件（本地）
    // 载入一个JS文件（远程）
    // 载入一个JS文件（判断是本地还是远程，调用对应方法）
    // 执行一段JS代码并返回
    // 执行一段JS代码，并等待执行完毕
    // 点击一个元素，并拖动到指定位置，然后放开鼠标
    // 通过一个选择器，选择一个input，并发送指定值
    // 通过一个选择器，选择一个select元素的指定值（支持值和index）
    // 通过一个选择器，选择一个单选元素的指定值（支持值和index）
    // 通过一个选择器，选择一个复选元素的指定值（支持值和index）
    // 通过一个选择器，选择一个radio元素的指定值（支持值和index）
    // 通过一个选择器，根据元素类型，调用对应的方法并设置指定值
    // 通过一个选择器，选择一个select元素的，获取指定值
    // 通过一个选择器，选择一个单选元素，获取指定值
    // 通过一个选择器，选择一个复选元素，获取指定值
    // 通过一个选择器，选择一个radio元素，获取指定值
    // 通过一个选择器，根据元素类型，调用对应的方法并获取指定值
    // 通过一个选择器，获取元素的指定位置x,y坐标
    // 通过一个选择器，如果获取到指定元素，则执行JS代码
    // 通过一个选择器，设置为焦点
    // 通过一个选择器，进行点击
    // 通过一个选择器，移除该元素
    // 通过一个选择器，设置innerHTML
    // 通过一个选择器，在之前插入html代码
    // 通过一个选择器，在之后插入html代码
    // 通过一个选择器，在该选择器内部插入html代码
    // 通过一个选择器，在该选择器内部/尾部插入html代码
    // 创建一个HTML元素（给HTML字符代码），并插入到指定元素位置（默认为BODY/内部之前），并在插入后是否执行某个JS代码
    // 通过一个选择器，获取该元素的Scroll高度
    // 通过一个选择器，Scroll跳转到指定高度（默认到顶）
    // 通过一个选择器，Scroll跳转到底部
    // 通过一个选择器，模拟滑动，水平滑动到XX长度，默认向右
    // 通过一个选择器，模拟滑动，垂直滑动到XX高度，默认向下
}

module.exports = {
    HandleInterface
}
补全上面的接口，并将函数功能以/*注释*/的形式放到函数体内
